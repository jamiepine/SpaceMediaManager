{"version":3,"file":"index.js","sources":["webpack:///webpack/bootstrap 48e115b3a86ed516150d","webpack:///external \"electron\"","webpack:///src/main.electron.ts","webpack:///src/electron/index.ts","webpack:///external \"path\"","webpack:///external \"url\"","webpack:///src/electron/dev-extensions.ts","webpack:///external \"electron-devtools-installer\"","webpack:///external \"devtron\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 48e115b3a86ed516150d","module.exports = require(\"electron\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"electron\"\n// module id = 0\n// module chunks = 0","/*\n * Electron bootstraping\n */\nimport './electron';\n\n\n// WEBPACK FOOTER //\n// src/main.electron.ts","import { app, BrowserWindow, ipcMain, dialog } from 'electron';\nimport path from 'path';\nimport url from 'url';\nimport './dev-extensions';\n\ndeclare const DEV_SERVER: boolean;\n\nconst indexUrl = url.format({\n    pathname: path.join(__dirname, 'index.html'),\n    protocol: 'file:',\n    slashes: true\n});\nconst splashUrl = url.format({\n    pathname: path.join(__dirname, 'splash.html'),\n    protocol: 'file:',\n    slashes: true\n});\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet win;\nlet splash;\n\nfunction createWindow() {\n  // Create the browser window.\n  win = new BrowserWindow({\n    width: 900, \n    height: 700,\n    minWidth: 500, \n    minHeight: 500, \n    frame: true,\n    titleBarStyle: 'hidden',\n    title: \"My Name Jeff\",\n    show: false\n  });\n  // win.maximize()\n\n\n  // SPLASH\n  splash = new BrowserWindow({\n    width: 400, \n    height: 550, \n    transparent: false, \n    frame: false, \n    alwaysOnTop: true\n  });\n  // load splash URL\n  splash.loadURL(splashUrl);\n\n  // and load the index.html of the app.\n  win.loadURL(indexUrl);\n\n  // // Open the DevTools.\n  // if (DEV_SERVER) {\n  //   win.webContents.openDevTools();\n  // }\n\n  // win.once('ready-to-show', () => {\n  //   splash.destroy();\n  //   win.show();\n  // });\n\n  setTimeout(() => \n  {\n    splash.destroy();\n    win.show();\n  },\n  3000);\n\n  // Emitted when the window is closed.\n  win.on('closed', () => {\n    // Dereference the window object, usually you would store windows\n    // in an array if your app supports multi windows, this is the time\n    // when you should delete the corresponding element.\n    win = null;\n\n  });\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on('ready', createWindow);\n\n// Quit when all windows are closed.\napp.on('window-all-closed', () => {\n  // On macOS it is common for applications and their menu bar\n  // to stay active until the user quits explicitly with Cmd + Q\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\napp.on('activate', () => {\n  // On macOS it's common to re-create a window in the app when the\n  // dock icon is clicked and there are no other windows open.\n  if (win === null) {\n    createWindow();\n  }\n});\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and require them here.\n\nipcMain.on('show-dialog', (event, arg) => {\n  dialog.showMessageBox(win, {\n    type: 'info',\n    buttons: ['OK'],\n    title: 'Native Dialog',\n    message: 'I\\'m a native dialog!',\n    detail: 'It\\'s my pleasure to make your life better.'\n  });\n});\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/electron/index.ts","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"url\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"url\"\n// module id = 4\n// module chunks = 0","/*\n * Install DevTool extensions when Electron is in development mode\n */\nimport { app } from 'electron';\n\ndeclare const ENV: string;\n\nif (ENV === 'development' && !process.env.CI) {\n  const installExtension = require('electron-devtools-installer').default;\n\n  const extensions = [\n    { name: 'Redux DevTools', id: 'lmhkpmbekcpmknklioeibfkpmmfibljd' },\n    // Augury is currently not working with Electron, but this can be uncommented when fixed\n    // See: https://github.com/rangle/augury/issues/687\n    // { name: 'Angular Augury', id: 'elgalmkoelokbchhkhacckoklkejnhcd' },\n  ];\n\n  app.once('ready', () => {\n    const userDataPath = app.getPath('userData');\n    extensions.forEach(ext => {\n      installExtension(ext.id).then(() => {\n        console.log(ext.name + ' installed in ' + userDataPath);\n      }).catch(err => {\n        console.error('Failed to install ' + ext.name, err);\n      });\n    });\n    require('devtron').install();\n  });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// src/electron/dev-extensions.ts","module.exports = require(\"electron-devtools-installer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"electron-devtools-installer\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"devtron\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"devtron\"\n// module id = 7\n// module chunks = 0"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7DA;;;;;;;ACAA;AAAA;AAAA;;AAEA;AACA;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChHA;;;;;;ACAA;;;;;;;ACAA;AAAA;AAAA;;AAEA;AACA;AAIA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AC7BA;;;;;;ACAA;;;A","sourceRoot":""}